<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        body { font-family: Arial, sans-serif; background-color: #f4f4f4; margin: 0; padding: 0; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; background-color: white; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        h1 { text-align: center; }
        .input-container { display: flex; justify-content: space-between; }
        input[type="text"] { width: 80%; padding: 10px; font-size: 16px; border: 1px solid #ccc; border-radius: 4px; }
        button { padding: 10px; background-color: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer; }
        ul { list-style: none; padding: 0; }
        li { background: #f9f9f9; margin: 10px 0; padding: 10px; border-radius: 4px; display: flex; justify-content: space-between; align-items: center; }
    </style>
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>
        <div class="input-container">
            <input type="text" id="taskInput" placeholder="Add a new task">
            <button id="addTaskBtn">Add Task</button>
        </div>
        <ul id="taskList"></ul>
    </div>
    <script>
        const taskInput = document.getElementById('taskInput');
        const addTaskBtn = document.getElementById('addTaskBtn');
        const taskList = document.getElementById('taskList');
        let tasks = [];
        addTaskBtn.addEventListener('click', () => {
            const taskText = taskInput.value;
            if (taskText) {
                tasks.push({ text: taskText, completed: false });
                renderTasks();
                taskInput.value = '';
            }
        });
        function renderTasks() {
            taskList.innerHTML = '';
            tasks.forEach((task, index) => {
                const li = document.createElement('li');
                li.innerHTML = `
                    <span style="text-decoration: ${task.completed ? 'line-through' : 'none'}">${task.text}</span>
                    <div>
                        <button onclick="toggleComplete(${index})">${task.completed ? 'Undo' : 'Complete'}</button>
                        <button onclick="editTask(${index})">Edit</button>
                        <button onclick="deleteTask(${index})">Delete</button>
                    </div>
                `;
                taskList.appendChild(li);
            });
        }
        function toggleComplete(index) {
            tasks[index].completed = !tasks[index].completed;
            renderTasks();
        }
        function editTask(index) {
            const newTaskText = prompt("Edit your task", tasks[index].text);
            if (newTaskText) {
                tasks[index].text = newTaskText;
                renderTasks();
            }
        }
        function deleteTask(index) {
            tasks.splice(index, 1);
            renderTasks();
        }
    </script>
</body>
</html>
